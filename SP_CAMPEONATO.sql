-- Listado de Equipos
IF OBJECT_ID('SP_LISTADOEQUIPOS') IS NOT NULL
	DROP PROC SP_LISTADOEQUIPOS
GO

CREATE PROC SP_LISTADOEQUIPOS
AS
	SELECT E.IDE_EQU, E.NOM_EQU, D.NOM_DIS, E.LOC_EQU, CAST(E.FEC_EQU AS DATE) [FECHA], E.FUN_EQU
	FROM EQUIPO E JOIN DISTRITO D ON E.IDE_DIS = D.IDE_DIS
GO

-- Listado de Equipos
IF OBJECT_ID('SP_LISTADOEQUIPOS_') IS NOT NULL
	DROP PROC SP_LISTADOEQUIPOS_
GO

CREATE PROC SP_LISTADOEQUIPOS_
AS
	SELECT * FROM EQUIPO
GO

-- Listado de Distritos
IF OBJECT_ID('SP_LISTADODISTRITOS') IS NOT NULL
	DROP PROC SP_LISTADODISTRITOS
GO

CREATE PROC SP_LISTADODISTRITOS
AS
	SELECT IDE_DIS, NOM_DIS FROM DISTRITO
GO
/*
-- Registro de Nuevo Equipo
IF OBJECT_ID('SP_NUEVOEQUIPO') IS NOT NULL
	DROP PROC SP_NUEVOEQUIPO
GO

CREATE PROC SP_NUEVOEQUIPO(@NOM VARCHAR(30), @DIS INT,
@LOC VARCHAR(30), @FEC DATE, @FUN VARCHAR(30))
AS
	INSERT INTO EQUIPO(NOM_EQU, IDE_DIS, LOC_EQU, FEC_EQU, FUN_EQU)
	VALUES(@NOM, @DIS, @LOC, @FEC, @FUN)
GO

-- Actualizar Equipo
IF OBJECT_ID('SP_ACTUALIZAEQUIPO') IS NOT NULL
	DROP PROC SP_ACTUALIZAEQUIPO
GO

CREATE PROC SP_ACTUALIZAEQUIPO(@IDE INT, @NOM VARCHAR(30), @DIS INT,
@LOC VARCHAR(30), @FEC DATE, @FUN VARCHAR(30))
AS
	UPDATE EQUIPO SET
	NOM_EQU = @NOM, IDE_DIS = @DIS, LOC_EQU = @LOC,
	FEC_EQU = @FEC, FUN_EQU = @FUN
	WHERE IDE_EQU = @IDE
GO
*/

-- Eliminar Equipo
IF OBJECT_ID('SP_ELIMINAEQUIPO') IS NOT NULL
	DROP PROC SP_ELIMINAEQUIPO
GO

CREATE PROC SP_ELIMINAEQUIPO(@IDE INT)
AS
	DELETE FROM EQUIPO WHERE IDE_EQU = @IDE
GO

-- Consultar Equipo por Localidad y Distrito
IF OBJECT_ID('SP_LISTAEQUIPOXLOCXDIS') IS NOT NULL
	DROP PROC SP_LISTAEQUIPOXLOCXDIS
GO

CREATE PROC SP_LISTAEQUIPOXLOCXDIS(@LOC VARCHAR(30), @DIS INT)
AS
	SELECT E.IDE_EQU, E.NOM_EQU, D.NOM_DIS, E.LOC_EQU,
	E.FEC_EQU, (YEAR(GETDATE()) - YEAR(E.FEC_EQU)) AS ANIOS FROM EQUIPO E
	JOIN DISTRITO D ON D.IDE_DIS = E.IDE_DIS
	WHERE UPPER(E.LOC_EQU) LIKE UPPER(@LOC+'%') AND E.IDE_DIS LIKE @DIS
GO
/*
CREATE PROC SP_CODIGOACTUAL
AS
	SELECT MAX(IDE_EQU) FROM EQUIPO;
GO
*/
--Select IDENT_CURRENT('IDE_EQU') from Equipo;

-- Mantenimiento Equipo
IF OBJECT_ID('SP_MANTENIMIENTOEQUIPO') IS NOT NULL
	DROP PROC SP_MANTENIMIENTOEQUIPO
GO

CREATE PROC SP_MANTENIMIENTOEQUIPO(@IDE INT, @NOM VARCHAR(30), @DIS INT,
@LOC VARCHAR(30), @FEC DATE, @FUN VARCHAR(30))
AS
	MERGE INTO EQUIPO AS TARGET
	USING(SELECT @IDE, @NOM, @DIS, @LOC, @FEC, @FUN) AS
	SOURCE(IDE_EQU, NOM_EQU, IDE_DIS, LOC_EQU, FEC_EQU, FUN_EQU)
	ON TARGET.IDE_EQU = SOURCE.IDE_EQU
	WHEN MATCHED THEN
		UPDATE SET TARGET.NOM_EQU = SOURCE.NOM_EQU,
		TARGET.IDE_DIS = SOURCE.IDE_DIS,
		TARGET.LOC_EQU = SOURCE.LOC_EQU,
		TARGET.FEC_EQU = SOURCE.FEC_EQU,
		TARGET.FUN_EQU = SOURCE.FUN_EQU
	WHEN NOT MATCHED THEN
		INSERT VALUES(SOURCE.NOM_EQU, SOURCE.IDE_DIS, SOURCE.LOC_EQU,
		SOURCE.FEC_EQU, SOURCE.FUN_EQU);
GO

--SP_LISTAEQUIPOXLOCXDIS 'ESTADIO MUNICIPA', 17;
--SELECT * FROM EQUIPO;

-- IDENTITY + 1
IF OBJECT_ID('SP_SIGUIENTECODIGOEQUIPO') IS NOT NULL
	DROP PROC SP_SIGUIENTECODIGOEQUIPO
GO

CREATE PROC SP_SIGUIENTECODIGOEQUIPO
AS
	SELECT IDENT_CURRENT('EQUIPO') + IDENT_INCR('EQUIPO')
GO

--Select IDENT_CURRENT('EQUIPO') + IDENT_INCR('EQUIPO')